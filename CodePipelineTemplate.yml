AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  # Source
  CodestarConnection:
    Type: String
    Description: '(Required) ARN of the CodeStar connection for GitHub'
    Default: 'arn:aws:codestar-connections:us-east-1:007695491693:connection/b965019a-d6b5-4bfa-ab0b-2596e6996504'
  GitHubFullRepositoryId:
    Type: String
    Description: '(Required) Repository name. Example: github_username/repository_name'
    Default: 'dereban25/codepipeline'
  GitHubBranchName:
    Type: String
    Description: (Required) Specify the branch name
    Default: 'patching'

  StackName:
    Type: String
    Description: (Optional) Specify Stack Name
    Default: 'Patching'

  # Templates
  TemplateSNS: 
    Type: String
    Description: '(Required) SNS CloudFormation Template for Patching'
    Default: 'SNS.yml'

  TemplateDocument: 
    Type: String
    Description: '(Required) SNS CloudFormation Template for Patching'
    Default: 'Document.yml'

  # Parameters
  ParametersSNS: 
    Type: String
    Description: '(Required) SNS parameters for Patching'
    Default: 'sns-parameters.json'

Resources:
  # S3 bucket for storing pipeline artifacts
  PipelineBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'codepipeline-${AWS::AccountId}-${AWS::Region}'
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled

  # IAM Role for the deployment stage of the CodePipeline
  CodePipelineServiceDeployRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CodePipelineServiceDeployRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 
              - cloudformation.amazonaws.com
            Action: sts:AssumeRole
            

  CodePipelineServiceDeployRoleInlinePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CodePipelineServiceDeployRoleInlinePolicy
      Roles:
        - Ref: CodePipelineServiceDeployRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: 'SNS'
            Effect: Allow
            Action:
              - sns:Publish
              - sns:GetTopicAttributes
              - sns:DeleteTopic
              - sns:CreateTopic
              - sns:Subscribe
              - sns:Unsubscribe
            Resource: !Sub 'arn:aws:sns:${AWS::Region}:${AWS::AccountId}:*'
          - Effect: Allow
            Action:
              - iam:PassRole
            Resource: '*'
          - Sid: 'CloudFormation'
            Effect: Allow
            Action:
              - cloudformation:CreateStack
              - cloudformation:DeleteStack
              - cloudformation:DescribeStacks
            Resource: !Sub 'arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${StackName}*'
          - Sid: 'S3Access'
            Effect: Allow
            Action:
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:ListBucket
            Resource:
              - !Sub 'arn:aws:s3:::codepipeline-${AWS::AccountId}-${AWS::Region}/*'
          - Sid: 'SSM'
            Effect: Allow
            Action:
              - ssm:CreateDocument
              - ssm:DeleteDocument
              - ssm:GetDocument
              - ssm:ListTagsForResource
            Resource: '*'











  # IAM Role for the source stage of the CodePipeline
  CodePipelineServiceSourceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CodePipelineServiceSourceRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole

  CodePipelineServiceSourceRoleInlinePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CodePipelineServiceSourceRoleInlinePolicy
      Roles:
        - Ref: CodePipelineServiceSourceRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - s3:PutObject
              - s3:GetObject
              - s3:ListBucket
            Resource: !Sub 'arn:aws:s3:::codepipeline-${AWS::AccountId}-${AWS::Region}/*'
          - Effect: Allow
            Action:
              - codestar-connections:UseConnection
            Resource: !Ref CodestarConnection
          - Effect: Allow
            Action:
              - cloudformation:DescribeStacks
              - cloudformation:CreateStack
              - cloudformation:DeleteStack
              - cloudformation:UpdateStack
            Resource: !Sub 'arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${StackName}/*'
          - Effect: Allow
            Action:
              - iam:PassRole
            Resource: !GetAtt CodePipelineServiceDeployRole.Arn
  
  # CodePipeline definition
  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: Patching
      RoleArn: !GetAtt CodePipelineServiceSourceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineBucket
      PipelineType: V2
      RestartExecutionOnUpdate: true
      Stages:
        - Name: DownloadCodeFromGithub
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: '1'
              Configuration:
                ConnectionArn: !Ref CodestarConnection
                FullRepositoryId: !Ref GitHubFullRepositoryId
                BranchName: !Ref GitHubBranchName
                DetectChanges: false
              RunOrder: 1
              OutputArtifacts:
                - Name: SourceArtifact

        - Name: DeploySNS
          Actions:
            - Name: DeployAction
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: SourceArtifact
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: !Ref StackName
                Capabilities: CAPABILITY_NAMED_IAM
                TemplatePath: !Sub SourceArtifact::templates/${TemplateSNS}
                TemplateConfiguration: !Sub SourceArtifact::parameters/${ParametersSNS}
                # ParameterOverrides: !Sub | 
                #   {
                #     "ArtifactKey": "#{codepipeline.PipelineExecutionId}",
                #     "StackName": "${StackName}"
                #   }
                RoleArn: !GetAtt CodePipelineServiceDeployRole.Arn
              RunOrder: 1

        - Name: DeployDocument
          Actions:
            - Name: DeployAction
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: SourceArtifact
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: !Ref StackName
                Capabilities: CAPABILITY_NAMED_IAM
                TemplatePath: !Sub SourceArtifact::templates/${TemplateDocument}
                RoleArn: !GetAtt CodePipelineServiceDeployRole.Arn
              RunOrder: 1
      ExecutionMode: QUEUED