# This AWS Serverless Application Model (SAM) template defines a serverless application
# that includes a Lambda function designed for deleting snapshots. The template handles
# the creation of the necessary IAM role, Lambda function, and associated policies.
# 
# **Parameters:**
# - **LambdaFunctionName**: Name for the Lambda function (default: LambdaDeleteSnapshot).
# - **S3Bucket**: The S3 bucket where the Lambda function's ZIP file is stored.
# - **S3Key**: The S3 key for the Lambda function's ZIP file.
# - **Days**: Number of days to be processed by the Lambda function.
# - **ExceptionAccountIds**: Comma-separated list of account IDs to be excluded.
# - **ExceptMasterAccount**: Flag to exclude the master account (True or False).
# - **RegionsToProcess**: Comma-separated list of regions to process.
# - **ExecutionRoleName**: Name of the role used for automation execution.
# - **SnsTopicArn**: ARN of the SNS topic used for notifications.
# - **TagKey**: Tag key used for filtering resources.
# - **TagValue**: Tag value used for filtering resources.
# - **LambdaRoleName**: Name of the IAM role associated with the Lambda function (default: LambdaDeleteSnapshotRole).
# 
# **Resources:**
# - **LambdaDeleteSnapshotRole**: IAM Role for the Lambda function with permissions for:
#   - Decrypting KMS keys.
#   - Creating log streams.
#   - Assuming roles specified by the ExecutionRoleName.
#   - Listing accounts and describing the AWS Organization.
#   - Publishing to the specified SNS topic.
# - **LambdaDeleteSnapshotRoleInlinePolicy**: Inline policy attached to the Lambda role with permissions
#   for KMS, CloudWatch Logs, STS, Organizations, and SNS.
# - **DeleteSnapshot**: Lambda function that handles snapshot deletions. It includes:
#   - Function code stored in the specified S3 bucket and key.
#   - Environment variables for various configuration options.
#   - A scheduled event to trigger the function daily.
#   - Runtime configuration set to auto-update.
#   - The IAM role assigned to the Lambda function.
# 
# **Outputs:**
# - **LambdaDeleteSnapshotRole**: Outputs the ARN of the Lambda execution role for use in other stacks or configurations.

AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An AWS Serverless Application Model template describing your Lambda function for snapshot deletion.

Parameters:

  LambdaFunctionName:
    Type: String
    Default: LambdaDeleteSnapshot
    Description: Lambda function name

  S3Bucket:
    Type: String
    Description: The S3 bucket where the Lambda function ZIP file is stored

  S3Key:
    Type: String
    Description: The S3 key for the Lambda function ZIP file
    
  Days:
    Type: String
    Description: Number of days for the function to process

  ExceptionAccountIds:
    Type: String
    Description: Exception account IDs

  ExceptMasterAccount:
    Type: String
    Description: Exclude master account (True or False)

  RegionsToProcess:
    Type: String
    Description: Regions to process (comma-separated)

  ExecutionRoleName:
    Type: String
    Description: Role name for automation execution

  SnsTopicArn:
    Type: String
    Description: SNS Topic ARN for notifications

  TagKey:
    Type: String
    Description: Tag key for filtering

  TagValue:
    Type: String
    Description: Tag value for filtering

  LambdaRoleName:
    Type: String
    Default: LambdaDeleteSnapshotRole
    Description: Lambda Role name

Resources:
  LambdaDeleteSnapshotRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref LambdaRoleName
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - lambda.amazonaws.com
            Action: sts:AssumeRole
  LambdaDeleteSnapshotRoleInlinePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: LambdaDeleteSnapshotRoleInlinePolicy
      Roles:
        - Ref: LambdaDeleteSnapshotRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - kms:Decrypt
              - kms:RetireGrant
            Resource: 
              - '*'
          - Effect: Allow
            Action:
              - logs:CreateLogStream
            Resource:
              - '*'
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Resource: !Sub 'arn:aws:iam::*:role/${ExecutionRoleName}'
          - Effect: Allow
            Action:
              - organizations:ListAccounts
              - organizations:DescribeOrganization
            Resource: 
              - '*'
          - Effect: Allow
            Action:
              - sns:Publish
            Resource: !Ref SnsTopicArn
  DeleteSnapshot:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Ref LambdaFunctionName
      CodeUri:
        Bucket: !Ref S3Bucket
        Key: !Ref S3Key
      Description: Lambda function for deleting snapshots
      MemorySize: 128
      Timeout: 30
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      EphemeralStorage:
        Size: 512
      Environment:
        Variables:
          DAYS: !Ref Days
          EXCEPTION_ACCOUNT_IDS: !Ref ExceptionAccountIds
          EXCEPT_MASTER_ACCOUNT: !Ref ExceptMasterAccount
          REGIONS_TO_PROCESS: !Ref RegionsToProcess
          EXECUTION_ROLE_NAME: !Ref ExecutionRoleName
          SNS_TOPIC_ARN: !Ref SnsTopicArn
          TAG_KEY: !Ref TagKey
          TAG_VALUE: !Ref TagValue
      Events:
        Schedule1:
          Type: Schedule
          Properties:
            Schedule: cron(0 0 ? * * *)
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
      Role: !GetAtt LambdaDeleteSnapshotRole.Arn

Outputs:
  LambdaDeleteSnapshotRole:
    Value: !Ref LambdaDeleteSnapshotRole
    Export:
      Name: LambdaDeleteSnapshotRole